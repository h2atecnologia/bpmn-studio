# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master


stages:

- stage: Prepare_version
  displayName: Prepare version
  jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci
      displayName: 'npm ci'

    - script: |
        node ./node_modules/.bin/ci_tools prepare-version --allow-dirty-workdir
      displayName: 'ci_tools prepare-version --allow-dirty-workdir'
      env:
        GIT_BRANCH: $(Build.SourceBranch)

    - publish: './package.json'
      artifact: package_json


- stage: Build_and_test
  displayName: Build and test
  jobs:
  - job: Lint_sources
    displayName: Lint sources
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: npm ci
      displayName: 'npm ci'

    - script: npm run lint
      displayName: 'npm run lint'

  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - download: current
      artifact: package_json

    - script: ls -al
      displayName: 'ls -al'

    - script: npm install
      displayName: 'npm install'

    - script: npm run build
      displayName: 'npm run build'

    - script: xvfb-run --auto-servernum npm test
      displayName: 'npm test'

    - publish: 'dist/web'
      artifact: NpmPackage-DistWeb

    - publish: 'config'
      artifact: NpmPackage-config

  - job: Windows
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - download: current
      artifact: package_json

    - script: npm install
      displayName: 'npm install'

    - script: npm run electron-build-windows
      displayName: 'npm run electron-build-windows'

    - script: npm test
      displayName: 'npm test'

  - job: macOS
    pool:
      vmImage: 'macOS-10.13'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - download: current
      artifact: package_json

    - script: npm install
      displayName: 'npm install'

    - script: npm run electron-build-macos
      displayName: 'npm run electron-build-macos'

    - script: npm test
      displayName: 'npm test'

- stage: Commit_and_tag_version
  displayName: "Commit & tag version"
  jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - download: current
      artifact: package_json

    - script: |
        node ./node_modules/.bin/ci_tools commit-and-tag-version --only-on-primary-branches
        node ./node_modules/.bin/ci_tools update-github-release --only-on-primary-branches --use-title-and-text-from-git-tag
      displayName: 'Prepare version'
      env:
        # User has to have 'admin' privileges on the repo (to be able to push to protected branches).
        GH_USER: $(GH_USER)
        GH_TOKEN: $(GH_TOKEN)
        GIT_BRANCH: $(Build.SourceBranch)

- stage: Publish
  jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - download: current
      artifact: package_json

    - script: |
        node ./node_modules/.bin/ci_tools publish-npm-package --create-tag-from-branch-name
      displayName: 'Publish to npm'
      env:
        # User has to have 'admin' privileges on the repo (to be able to push to protected branches).
        GH_USER: $(GH_USER)
        GH_TOKEN: $(GH_TOKEN)
        GIT_BRANCH: $(Build.SourceBranch)
        # User has to have 'push' privileges on the org (to be able to, well, push to the registry).
        NPM_TOKEN: $(NPM_TOKEN)
