name: Node CI

on: [push]

env:
  isBranchToRelease: ${{ contains(github.ref, 'master') || contains(github.ref, 'develop') || contains(github.ref, 'beta') }}

jobs:
  prepare_version:
    name: Prepare Version
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@master

    - name: Log env
      run: echo $isBranchToRelease

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Install ci tools
      run: npm i @process-engine/ci_tools
    - name: Prepare version
      run: |
        ./node_modules/.bin/ci_tools prepare-version --allow-dirty-workdir
    
    - name: Stash package.json
      uses: actions/upload-artifact@master
      with:
        name: package_json
        path: package.json

  lint_linux:
    name: "Lint sources"
    needs: prepare_version
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    
    - name: Unstash package.json
      uses: actions/download-artifact@master
      with:
        name: package_json
        path: "."

    - name: Install npm dependencies
      run: |
        cat package.json
        npm ci
        ./node_modules/.bin/ci_tools npm-install-only --except-on-primary-branches @process-engine/ @essential-projects/
    - run: npm run lint

  build_and_test_linux:
    name: "Build & Test (Linux)"
    needs: prepare_version
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master

    - name: Unstash package.json
      uses: actions/download-artifact@master
      with:
        name: package_json
        path: "."

    - name: Install npm dependencies
      run: |
        npm ci
        ./node_modules/.bin/ci_tools npm-install-only --except-on-primary-branches @process-engine/ @essential-projects/
    - name: Build the web app 
      run: npm run build

    - name: Run the tests
      run: npm test

    - name: Create Tarball
      run: npm run create-tarball

    - name: Stash Tarball
      uses: actions/upload-artifact@master
      with:
        name: bpmn-studio_tar
        path: bpmn-studio.tar.gz

    - name: Bundle web
      run: | 
        mkdir -p dist_web/dist/web
        cp index.html dist_web/index.html
        cp -r dist/web dist_web/dist
        mkdir -p dist_web/src/resources
        cp -r src/resources dist_web/src
        cp favicon.ico dist_web/

    - uses: actions/upload-artifact@master
      name: Upload web app
      with:
        name: dist_web
        path: dist_web

  build_and_test_macos:
    name: "Build & Test (macOS)"
    needs: prepare_version
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Unstash package.json
      uses: actions/download-artifact@master
      with:
        name: package_json
        path: "."
    
    - name: Install NPM dependencies
      run: |
        npm ci
        ./node_modules/.bin/ci_tools npm-install-only --except-on-primary-branches @process-engine/ @essential-projects/

    - name: Build the Electron app
      run: npm run electron-build-macos
      env: 
        CSC_LINK: ${{ secrets.CSC_LINK }}

    - name: Run the tests
      run: npm test

    - name: Prepare macOS Bundle
      run: |
        mkdir dist_electron_macos
        cp dist/electron/bpmn-studio-setup**.zip dist_electron_macos
        cp dist/electron/bpmn-studio-setup**.dmg dist_electron_macos

    - name: Prepare macOS Bundle for GitHub Release
      if: $isBranchToRelease
      run: |
        cp dist/electron/bpmn-studio-setup**.dmg.blockmap dist_electron_macos
        cp dist/electron/latest-mac.yml dist_electron_macos

    - uses: actions/upload-artifact@master
      name: Upload Electron macOS app
      with:
        name: dist_electron_macos
        path: dist_electron_macos

  build_and_test_windows:
    name: "Build & Test (Windows)"
    needs: prepare_version
    runs-on: windows-2016
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Unstash package.json
      uses: actions/download-artifact@master
      with:
        name: package_json
        path: "."
    
    - name: Install npm dependencies
      run: |
        npm ci
        ./node_modules/.bin/ci_tools npm-install-only --except-on-primary-branches @process-engine/ @essential-projects/
      shell: powershell

    - name: Install Windows build tools
      run: npm --vs2015 install --global windows-build-tools
      shell: powershell

    - name: Build the Electron app
      run: npm run electron-build-windows

    - name: Run the tests
      run: npm test

    - name: Prepare Windows Bundle
      run: |
        mkdir dist_electron_windows
        copy-item .\dist\electron\bpmn-studio-setup-**.exe .\dist_electron_windows\
      shell: powershell

    - name: Prepare Windows Bundle for GitHub Release
      if: $isBranchToRelease
      run: |
        copy-item .\dist\electron\bpmn-studio-setup-**.exe.blockmap .\dist_electron_windows\
        copy-item .\dist\electron\latest.yml .\dist_electron_windows\
      shell: powershell

    - uses: actions/upload-artifact@master
      name: Upload Electron Windows app
      with:
        name: dist_electron_windows
        path: dist_electron_windows

  prepare_and_tag_version:
    name: "Commit & Tag Version"
    needs: [build_and_test_linux, build_and_test_macos, build_and_test_windows]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Unstash package.json
      uses: actions/download-artifact@master
      with:
        name: package_json
        path: "."

    - name: Install ci tools
      run: npm i @process-engine/ci_tools
      
    - name: Commit and Tag
      run: |
        ./node_modules/.bin/ci_tools commit-and-tag-version --only-on-primary-branches
        ./node_modules/.bin/ci_tools update-github-release --only-on-primary-branches --use-title-and-text-from-git-tag
      env: 
        GH_USER: ${{ secrets.GH_USER }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

  publish_npm:
    name: "Publish npm package"
    needs: prepare_and_tag_version
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    
    - name: Unstash package.json
      uses: actions/download-artifact@master
      with:
        name: package_json
        path: "."
   
    - name: Install ci tools
      run: npm i @process-engine/ci_tools

    - name: Publish npm package
      run: ./node_modules/.bin/ci_tools publish-npm-package --create-tag-from-branch-name
      env: 
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish_github:
    name: "Publish GitHub Release"
    needs: prepare_and_tag_version
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master

    - name: Use Node.js 12.x
      if: $isBranchToRelease
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Unstash package.json
      if: $isBranchToRelease
      uses: actions/download-artifact@master
      with:
        name: package_json
        path: "."

    - name: Unstash macOS Electron app
      if: $isBranchToRelease
      uses: actions/download-artifact@master
      with:
        name: dist_electron_macos
        path: "dist/electron"

    - name: Unstash Windows Electron app
      if: $isBranchToRelease
      uses: actions/download-artifact@master
      with:
        name: dist_electron_windows
        path: "dist/electron"

    - name: Install ci tools
      if: $isBranchToRelease
      run: npm i @process-engine/ci_tools

    - name: Upload to GitHub
      if: $isBranchToRelease
      run: |
        ./node_modules/.bin/ci_tools update-github-release \
                              --assets dist/electron/bpmn-studio-setup-*.exe \
                              --assets dist/electron/bpmn-studio-setup-*.exe.blockmap \
                              --assets dist/electron/bpmn-studio-setup-*.zip \
                              --assets dist/electron/bpmn-studio-setup-*.dmg \
                              --assets dist/electron/bpmn-studio-setup-*.dmg.blockmap \
                              --assets dist/electron/latest-mac.yml \
                              --assets dist/electron/latest.yml
      env:
        GH_USER: ${{ secrets.GH_USER }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build_docker:
    name: "Build & Publish Docker Image"
    needs: prepare_and_tag_version
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master

    - name: Unstash package.json
      if: $isBranchToRelease
      uses: actions/download-artifact@master
      with:
        name: package_json
        path: "."

    - name: Unstash Tarball
      if: $isBranchToRelease
      uses: actions/download-artifact@master
      with:
        name: bpmn-studio_tar
        path: "."

    - name: Get BPMN Studio version
      if: $isBranchToRelease
      run: echo "##[set-output name=version;]$(node --print --eval "require('./package.json').version")"
      id: studio_version

    - name: Log Studio Version
      if: $isBranchToRelease
      run: |
        echo $VERSION
      env:
        VERSION: ${{ steps.studio_version.outputs.version }}

    - name: Build Docker Image
      if: $isBranchToRelease
      run: |
        docker build --build-arg NODE_IMAGE_VERSION=10-alpine \
                    --build-arg BPMN_STUDIO_VERSION=$VERSION \
                    --no-cache \
                    --tag 5minds/bpmn-studio-bundle:$VERSION .
      env:
        VERSION: ${{ steps.studio_version.outputs.version }}

    - name: Show Docker Images
      if: $isBranchToRelease
      run: docker images

    - name: Login to Docker
      if: $isBranchToRelease
      run: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    - name: Push Docker Image
      if: $isBranchToRelease
      run: docker push 5minds/bpmn-studio-bundle
